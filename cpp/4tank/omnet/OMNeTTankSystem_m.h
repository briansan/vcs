//
// Generated file, do not edit! Created by opp_msgc 4.4 from OMNeTTankSystem.msg.
//

#ifndef _OMNETTANKSYSTEM_M_H_
#define _OMNETTANKSYSTEM_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>OMNeTTankSystem.msg</tt> by opp_msgc.
 * <pre>
 * message OMNeTTankSystemMsg
 * {
 *   bool setTank; 
 *   int index;
 *   int key;
 *   double value;
 * }
 * </pre>
 */
class OMNeTTankSystemMsg : public ::cMessage
{
  protected:
    bool setTank_var;
    int index_var;
    int key_var;
    double value_var;

  private:
    void copy(const OMNeTTankSystemMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OMNeTTankSystemMsg&);

  public:
    OMNeTTankSystemMsg(const char *name=NULL, int kind=0);
    OMNeTTankSystemMsg(const OMNeTTankSystemMsg& other);
    virtual ~OMNeTTankSystemMsg();
    OMNeTTankSystemMsg& operator=(const OMNeTTankSystemMsg& other);
    virtual OMNeTTankSystemMsg *dup() const {return new OMNeTTankSystemMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual bool getSetTank() const;
    virtual void setSetTank(bool setTank);
    virtual int getIndex() const;
    virtual void setIndex(int index);
    virtual int getKey() const;
    virtual void setKey(int key);
    virtual double getValue() const;
    virtual void setValue(double value);
};

inline void doPacking(cCommBuffer *b, OMNeTTankSystemMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, OMNeTTankSystemMsg& obj) {obj.parsimUnpack(b);}


#endif // _OMNETTANKSYSTEM_M_H_
